<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2009-2018 The Apromore Initiative.
  ~
  ~ This file is part of "Apromore".
  ~
  ~ "Apromore" is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ "Apromore" is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty
  ~ of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this program.
  ~ If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apromore</groupId>
        <artifactId>apromore</artifactId>
        <version>1.1</version>
        <relativePath>../../</relativePath>
    </parent>

    <artifactId>manager-assembly</artifactId>
    <packaging>pom</packaging>
    <name>Apromore Manager Bundle Assembly</name>

    <properties>
        <deploy.dir>${project.build.directory}/repository</deploy.dir>
    </properties>

    <scm>
        <url>http://apromore.googlecode.com/svn/trunk/Apromore-Assembly/Manager-Assembly</url>
        <connection>scm:svn:http://apromore.googlecode.com/svn/trunk/Apromore-Assembly/Manager-Assembly</connection>
        <developerConnection>scm:svn:https://apromore.googlecode.com/svn/trunk/Apromore-Assembly/Manager-Assembly</developerConnection>
    </scm>

    <dependencies>

        <!-- Manager Web Application -->
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>apromore-manager</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>apromore-manager-ws</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <!--
            Extra Dependencies on just the 'classes' of Manager-WS to pull in transitive dependencies.
            The JAR itself needs to be excluded manually.
        -->
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>apromore-manager-ws</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
        </dependency>

        <!-- Schema's, these are independant of the Manager, but needed by our plan -->
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>anf-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>aris-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>bpmn-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>cpf-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>epml-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>pnml-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>rlf-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>xpdl-schema</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>yawl-schema</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- Plugin Provider, these are independent of the Apromore Manager, but needed by our plan -->
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>plugin-api-provider</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>canoniser-api-provider</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>annotation-api-provider</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>deployment-api-provider</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- MYSQL,Postgres and Oracle Bundles -->
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>database-h2</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>database-mysql</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>build-tools</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.cglib</groupId>
            <artifactId>com.springsource.net.sf.cglib</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${deploy.dir}/usr</outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>compile</includeScope>
                            <excludeTransitive>false</excludeTransitive>
                            <!-- Those artifacts are OSGI bundles already in Virgo -->
                            <excludeArtifactIds>
                                com.springsource.javax.xml.bind,
                                javax.persistence,
                                logback-classic,
                                logback-core,
                                org.springframework.asm,
                                org.springframework.aop,
                                org.springframework.core,
                                org.springframework.aspects,
                                org.springframework.beans,
                                org.springframework.context,
                                org.springframework.context.support,
                                org.springframework.expression,
                                org.springframework.jdbc,
                                org.springframework.jms,
                                org.springframework.orm,
                                org.springframework.oxm,
                                org.springframework.transaction,
                                org.springframework.web,
                                org.springframework.web.servlet
                            </excludeArtifactIds>
                            <!-- Spring and Gemini are already bundled with Virgo -->
                            <excludeGroupIds>
                                hub,
                                org.springframework.security,
                                org.eclipse.gemini,
                                org.eclipse.osgi,
                                javax.servlet
                            </excludeGroupIds>
                            <!-- Exclude the manager-classes.jar which is only used to pull in transitive dependencies -->
                            <excludeClassifiers>
                                classes
                            </excludeClassifiers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.apromore.osgihelper.RemoveNonOSGIJars</mainClass>
                            <arguments>
                                <argument>${deploy.dir}/usr</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
